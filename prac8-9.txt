

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%pip install seaborn
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score

df= pd.read_csv("Iris.csv")

df


df.nunique()



df.describe()



df.isnull().sum()


df.dtypes



df.info()



df2 =  df.drop('Id',axis=1)

df2.hist(figsize=(12, 8), bins=30, edgecolor='black', grid=True)
plt.show()



plt.figure(figsize=(12, 6))
for i, column in enumerate(df2.columns[:-1], 1):  # exclude 'species'
    plt.subplot(2, 2, i)
    sns.boxplot(y=df2[column],showfliers=False)
    plt.title(f'Box Plot of {column}')
plt.tight_layout()
plt.show()



X = df2.drop(columns='Species')  
y = df2['Species'] 

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

nb = GaussianNB()

nb.fit(X_train, y_train)



y_pred = nb.predict(X_test)

cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(cm)



accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted')
recall = recall_score(y_test, y_pred, average='weighted')
error_rate = 1 - accuracy

print(f"Accuracy: {accuracy:.2f}")
print(f"Error Rate: {error_rate:.2f}")
print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")


